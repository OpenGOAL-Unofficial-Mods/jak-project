;;-*-Lisp-*-
(in-package goal)

;; name: hide-and-seek-multi-devonly.gc
;; name in dgo: hide-and-seek-multi-devonly
;; dgos: TODO

;;;;;
;Variables
;;;;;

(define y-coord 140)

(define col-int 8) ;int for menu's font color

(define display-gmenu? #f)
(define page 0) ;menu's page index
(define page-size 5) ;number of pages used to mod

;;;;;
;Menu
;;;;;

(defun gmenu-1 ()
  ;; show/hide gmenu with L3
  (if (cpad-pressed? 0 l3)
    (set! display-gmenu? (not display-gmenu?))
    )
  (when display-gmenu?
    (when (cpad-pressed? 0 right)
      (set! page (mod (+ page 1) page-size))
      )
    (when (cpad-pressed? 0 left)
      (set! page (mod (+ (- page 1) page-size) page-size))
      )
    (with-dma-buffer-add-bucket ((testbuf (-> (current-frame) debug-buf)) (bucket-id debug-no-zbuf))
              (when (= page 2)

(draw-string-xy (string-format "OpenGOAL HTTP Hide and seek Dev menu
Server Settings
"
)

                      testbuf 10 y-coord (the font-color col-int) (font-flags shadow kerning))
                ;;Can do things when certain pages are selected
                #|(when (cpad-pressed? 0 up)
                  (format *stdcon* "up")
                )
                (when (cpad-pressed? 0 down)
                  (format *stdcon* "down")
                )|#
              )

              (when (= page 3)
                (clear *temp-string*)
                (format *temp-string* "OpenGOAL HTTP Hide and seek Dev menu
Current Player Settings
Username: ~S
Player slot: ~D 
Player Position: ~M ~M ~M "

(-> *self-player-info* username)
(-> *multiplayer-info* player_num)
(-> *target* root trans x)(-> *target* root trans y)(-> *target* root trans z))

                (format *temp-string* "
Target State: ~A
Target Color: ~S"
(-> *target* state name)
(tgt-color->string (-> *self-player-info* color))
)

                (draw-string-xy *temp-string*
                testbuf 10 y-coord (the font-color col-int) (font-flags shadow kerning))
                (clear *temp-string*)
              )

              (when (= page 1)
                (draw-string-xy (string-format "Change font color with dpad up/down") testbuf 10 y-coord (the font-color col-int) (font-flags shadow kerning))
                (when (cpad-pressed? 0 up)
                  (+! col-int 1)
                )
                (when (cpad-pressed? 0 down)
                  (-! col-int 1)
                )
              )

              (when (= page 0)
                (draw-string-xy (string-format "Use Dpad to move text up/down~%Use left/right dpad to change windows") testbuf 10 y-coord (the font-color col-int) (font-flags shadow kerning))
                (when (cpad-pressed? 0 up)
                  (-! y-coord 5)
                )
                (when (cpad-pressed? 0 down)
                  (+! y-coord 5)
                )
              )
            )
            ;;Processes should suspend themselves, the loop will resume next frame
    )
  (none)       
)


